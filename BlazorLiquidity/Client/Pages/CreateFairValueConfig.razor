@page "/create-fairValueConfig"
@attribute [Authorize]
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using BlazorLiquidity.Shared
@using Common.Models.DTOs
@using Common.Models.Entities
@using Microsoft.AspNetCore.Components
@inject PortfolioHttpClient PortfolioHttpClient
@inject NavigationManager NavigationManager


<SfCard Orientation="CardOrientation.Vertical">
    
    <CardHeader>
        <div class="CustomHeader">Create Fair Value Config</div>
    </CardHeader>
    <br/>
    <EditForm style="width: 100%" Model="@_fairValueConfig" OnValidSubmit="@HandleValidSubmit" >
        <DataAnnotationsValidator />
        <ValidationSummary />
 
        <label class="label" for="CoinPair" >Coin Pair</label>
                               
        <InputSelect id="CoinPair" @bind-Value="_fairValueConfig.CoinPairId" >
            @foreach (var c  in _coinPairs)
            {
                <option value="@c.CoinPairId">@c.Name</option>
            }
        </InputSelect>
        <br/>   <br/>                  
                    
        <label class="label" for="Venue" >Exchange Name</label>
                               
        <InputSelect id="Venue" @bind-Value="_fairValueConfig.VenueId" >
            @foreach (var c  in _venues)
            {
                <option value="@c.VenueId">@c.VenueName</option>
            }
        </InputSelect>
        <br/>  <br/> 
        <label class="label" for="UpdateRate" >Update Rate(secs)</label>
        <InputNumber id="UpdateRate" @bind-Value="_fairValueConfig.UpdateIntervalSecs" />
    
        <br/> <br/>
        <SfButton Type="submit">OK</SfButton>
                   
    </EditForm>
</SfCard>

<style  type="text/css" class="cssStyles"> 
   
    .e-grid .e-altrow {
        background-color: #aaaaaa;
    }
    .CustomHeader, 
    .e-card .e-card-header .e-card-header-caption:first-child { 
        padding-left: 0%; 
        
    } 

    .label {
        background-color: white;
        color: black;
    }
 
    .lower {
        background-color: red;
    }

    .higher {
        background-color: green;
    }

    .same {
        background-color: orange
    }

    .e-grid .e-headercell { 
        background-color: #36486b; 
    } 
  
    .e-headercell {         
        color: white;
        background-color: black;
        
        font-size: 40px;
        font-weight: bold; 
    }

    .e-grid .e-rowcell {
        font-size: 26px;
        padding-bottom: 3px;
        padding-top: 3px;
    }

    .e-headercelldiv {
        font-size: 40px;
        font-weight: bold;
        padding-bottom: 6px;
        padding-top: 6px;
        background-color: black;
    }
    
    .e-custom {
        border-radius: 0;
        height: 30px;
        width: 80px;
    }

    .e-custom, .e-custom:hover, .e-custom:focus, .e-custom:active {
        background-color: #ff6e40;
        color: #fff;
        font-size: 1.0rem; 
        font-weight: bold;
    }

</style>

@code {
    private FairValueConfigForUiDTO _fairValueConfig = new ();
    private List<VenueDTO> _venues = new List<VenueDTO>();
    private List<CoinPairDTO> _coinPairs = new List<CoinPairDTO>();
    SfButton ToggleBtn;
    private bool _displayStuff = false;

    protected override async Task OnInitializedAsync()
    {
        _coinPairs = await PortfolioHttpClient.GetCoinPairs();
        _venues = await PortfolioHttpClient.GetVenues();
    }


    public async Task HandleValidSubmit()
    {
        await PortfolioHttpClient.CreateFairValueConfig(_fairValueConfig);
        NavigationManager.NavigateTo("list-fairValueConfigs");
    }
}


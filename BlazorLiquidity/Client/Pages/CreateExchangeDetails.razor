@page "/create-exchange-details/{ConfigName}"
@using Syncfusion.Blazor.Inputs
@using Microsoft.AspNetCore.Components

@inject PortfolioHttpClient PortfolioHttpClient
@inject NavigationManager NavigationManager
@attribute [Authorize]

<SfCard Orientation="CardOrientation.Vertical">
    
    <CardHeader>
        <div class="CustomHeader">Add New Exchange Config to @ConfigName</div></CardHeader>
    <EditForm Model="@_exchange" OnValidSubmit="@HandleValidSubmit" >
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <label for="Venue">Venue</label>

        <InputSelect id="Venue" @bind-Value="_exchange.VenueId">
            @foreach (var v  in _venues)
            {
                <option value="@v.VenueId">@v.VenueName</option>
            }
        </InputSelect>
        <SfTextBox id="exchangeName" Placeholder='Exchange' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.Name" Width="200" />
        <SfTextBox id="coinPairs" Placeholder='Coin Pair - Enter in comma seperated format' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.CoinPairs" Width="200" />
        <SfTextBox id="ApiKey" Placeholder='ApiKey' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.ApiKey.Key" Width="200" />
        <SfTextBox id="Secret" Placeholder='Secret' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.ApiKey.Secret" Width="200" />
        <SfTextBox id="PassPhrase" Placeholder='PassPhrase' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.ApiKey.PassPhrase" Width="200" />
        <SfTextBox id="Description" Placeholder='Description' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.ApiKey.Description" Width="200" />
        <SfTextBox id="AccountName" Placeholder='Account Name' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.ApiKey.AccountName" Width="200" />
        <label for="IsSubAccount">IsSubAccount</label>
        <InputSelect id="IsSubAccount" @bind-Value="_exchange.ApiKey.IsSubAccount">
            <option value=true>True</option>
            <option value=false>False</option>
        </InputSelect>

        <SfTextBox id="SubAccountName" Placeholder='SubAccount Name' FloatLabelType='@FloatLabelType.Auto' @bind-Value="_exchange.ApiKey.SubAccountName"  Width="200" />
        <SfTextBox Type="InputType.Password" Placeholder='Password' FloatLabelType='@FloatLabelType.Auto' id="Password" @bind-Value="_exchange.ApiKey.Password" Width="200" />
        <br/>
        <SfButton Type="submit">OK</SfButton>

    </EditForm>
</SfCard>

@code {

    [Parameter]
    public string ConfigName { get; set; }

    private StrategyExchangeConfigDTO _data { get; set; } = new();
    private List<VenueDTO> _venues = new List<VenueDTO>();
    private ExchangeDetailsDTO _exchange = new ();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _data = await PortfolioHttpClient.GetStrategyConfigData(ConfigName);
            _venues = await PortfolioHttpClient.GetVenues();
            Console.WriteLine($"*********************************Successfully got config data and venue stuff");
        }
        catch (Exception e)
        {
            Console.WriteLine($"*****************Error in CreateExchangeDetails {e.Message}");
        }
    }

    public async Task HandleValidSubmit()
    {
        Console.WriteLine("In HandleValidSubmit");
        _exchange.StrategySPSubscriptionConfigId = _data.StrategySPSubscriptionConfigId;
        _exchange.SPId = _data.SPId;
        _exchange.DateCreated = DateTime.UtcNow;
        _exchange.ApiKey.DateCreated = _exchange.DateCreated;
        await PortfolioHttpClient.CreateExchangeDetailsEntry(_exchange);
        NavigationManager.NavigateTo($"strategy-config-instance-detail/{_data.StrategySPSubscriptionConfigId}");
        Console.WriteLine("Created CreateExchangeDetailsEntry");
    }
}
